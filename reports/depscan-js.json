{"id": "NPM-1085693", "package": "npm:underscore.string", "purl": "pkg:npm/underscore.string@2.4.0", "package_type": "npm", "package_usage": "required", "version": "2.4.0", "fix_version": "3.3.5", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service in underscore.string\nVersions of `underscore.string` prior to *3.3.5* are vulnerable to Regular Expression Denial of Service (ReDoS).\n\nThe function `unescapeHTML` is vulnerable to ReDoS due to an overly broad regex. The slowdown is approximately 2s for 50,000 characters but grows exponentially with larger inputs.\n\n\n## Recommendation\n\nUpgrade to version 3.3.5 or higher.\nUpgrade to version 3.3.5 or later", "related_urls": [], "occurrence_count": 10, "reachable_flows": 0}
{"id": "NPM-1085724", "package": "npm:js-yaml", "purl": "pkg:npm/js-yaml@2.0.5", "package_type": "npm", "package_usage": "required", "version": "2.0.5", "fix_version": "3.13.1", "severity": "MEDIUM", "cvss_score": "5.9", "short_description": "# Denial of Service in js yaml\nVersions of `js yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 3.13.0.\nUpgrade to version 3.13.0 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "NPM-1085744", "package": "npm:tunnel-agent", "purl": "pkg:npm/tunnel-agent@0.4.3", "package_type": "npm", "package_usage": "optional", "version": "0.4.3", "fix_version": "0.6.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Memory Exposure in tunnel agent\nVersions of `tunnel agent` before 0.6.0 are vulnerable to memory exposure.\n\nThis is exploitable if user supplied input is provided to the auth value and is a number.\n\nProof of concept:\n```js\nrequire('request')({\n\tmethod: 'GET',\n\turi: 'http://www.example.com',\n\ttunnel: true,\n\tproxy:{\n\t\tprotocol: 'http:',\n\t\thost:'127.0.0.1',\n\t\tport:8080,\n\t\tauth:USERSUPPLIEDINPUT // number\n\t}\n});\n```\n\n\n## Recommendation\n\nUpdate to version 0.6.0 or later.\nUpgrade to version 0.6.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2016-1000223", "package": "npm:jws", "purl": "pkg:npm/jws@2.0.0", "package_type": "npm", "package_usage": "required", "version": "2.0.0", "fix_version": "3.0.0", "severity": "HIGH", "cvss_score": "8.7", "short_description": "# Forgeable Public/Private Tokens in jws\nAffected versions of the `jws` package allow users to select what algorithm the server will use to verify a provided JWT. A malicious actor can use this behaviour to arbitrarily modify the contents of a JWT while still passing verification. For the common use case of the JWT as a bearer token, the end result is a complete authentication bypass with minimal effort.\n\n\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.\nUpgrade to version 3.0.0 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2017-1000048", "package": "npm:qs", "purl": "pkg:npm/qs@1.0.2", "package_type": "npm", "package_usage": "required", "version": "1.0.2", "fix_version": "6.2.4", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution Protection Bypass in qs\nAffected version of `qs` are vulnerable to Prototype Pollution because it is possible to bypass the protection. The `qs.parse` function fails to properly prevent an object's prototype to be altered when parsing arbitrary input. Input containing `[` or ` ` may bypass the prototype pollution protection and alter the Object prototype. This allows attackers to override properties that will exist in all objects, which may lead to Denial of Service or Remote Code Execution in specific circumstances.\n\n\n## Recommendation\n\nUpgrade to 6.0.4, 6.1.2, 6.2.3, 6.3.2 or later.\nUpgrade to version 6.0.4 or later", "related_urls": [], "occurrence_count": 7, "reachable_flows": 0}
{"id": "CVE-2015-8861", "package": "npm:handlebars", "purl": "pkg:npm/handlebars@3.0.8", "package_type": "npm", "package_usage": "required", "version": "3.0.8", "fix_version": "4.7.7", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# Cross Site Scripting in handlebars\nVersions of `handlebars` prior to 4.0.0 are affected by a cross site scripting vulnerability when attributes in handlebar templates are not quoted.\n\n\n## Proof of Concept\nTemplate:\n```<a href={{foo}}/>```\n\nInput:\n```{ 'foo' : 'test.com onload=alert(1)'}```\n\nRendered result:\n```<a href=test.com onload=alert(1)/>```\n\n\n## Recommendation\n\nUpdate to version 4.0.0 or later.\nAlternatively, ensure that all attributes in handlebars templates are encapsulated with quotes.\nUpgrade to version 4.0.0 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2016-10549", "package": "npm:sails", "purl": "pkg:npm/sails@0.11.5", "package_type": "npm", "package_usage": "required", "version": "0.11.5", "fix_version": "0.12.7", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Sails before 0.12.7 vulnerable to Broken CORS\nAffected versions of `sails` have an issue with the CORS configuration where the value of the origin header is reflected as the value for the `Access Control Allow Origin` header. This may allow an attacker to make AJAX requests to vulnerable hosts through cross site scripting or a malicious HTML Document, effectively bypassing the Same Origin Policy. \n\n## Mitigating Factors\n\nThis is only an issue when `allRoutes` is set to `true` and `origin` is set to `*` or left commented out in the sails CORS config file. \n\nThe problem can be compounded when the cors `credentials` setting is not provided, because at that point authenticated cross domain requests are possible.\n\n\n## Recommendation\n\nUpdate to version 0.12.7 or later.\n\nAs this vulnerability is primarily a user error, the patch for the vulnerability will simply cause the application to write an error message to the console when a vulnerable configuration is used in a production environment.\n\nWriting a proper CORS configuration is still the responsibility of the user, so it is necessary to check for the error message after installing the patch. Be sure you are not using `allRoutes: true` with `origin:'*'`, and that you uncomment `origin` and set it to a reasonable value. Ensure that if `origin` is set to `*` that you truly mean for all other websites to be able to make cross domain requests to your API.\n\nLikewise, ensure `credentials` is uncommented out and set to the appropriate value. Make sure to explicitly set which origins may request resources via CORS.\nUpgrade to version 0.12.7 or later", "related_urls": [], "occurrence_count": 6, "reachable_flows": 0}
{"id": "CVE-2021-44908", "package": "npm:sails", "purl": "pkg:npm/sails@0.11.5", "package_type": "npm", "package_usage": "required", "version": "0.11.5", "fix_version": "1.5.7", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Prototype Pollution in Sails.js\nSails.js <= 1.5.2 is vulnerable to Prototype Pollution via controller/load action modules.js, function loadActionModules(). A [patch (https://github.com/balderdashy/sails/commit/7c5379a656bb305c958df1dcc2b51a9668830358) is available in the `master` branch of Sails.js's GItHub repository.\nNone", "related_urls": [], "occurrence_count": 6, "reachable_flows": 0}
{"id": "CVE-2022-29078", "package": "npm:ejs", "purl": "pkg:npm/ejs@0.8.8", "package_type": "npm", "package_usage": "required", "version": "0.8.8", "fix_version": "3.1.10", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# ejs template injection vulnerability\nThe ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server side template injection in settings[view options [outputFunctionName . This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).\nUpgrade to version 3.1.7 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2020-36048", "package": "npm:engine.io", "purl": "pkg:npm/engine.io@1.6.11", "package_type": "npm", "package_usage": "required", "version": "1.6.11", "fix_version": "3.6.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Resource exhaustion in engine.io\nEngine.IO before 4.0.0 and 3.6.0 allows attackers to cause a denial of service (resource consumption) via a POST request to the long polling transport.\nUpgrade to version 3.6.0 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2022-41940", "package": "npm:engine.io", "purl": "pkg:npm/engine.io@1.6.11", "package_type": "npm", "package_usage": "required", "version": "1.6.11", "fix_version": "3.6.1", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# Uncaught exception in engine.io\n### Impact\n\nA specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process.\n\n```\nevents.js:292\n\t\t\tthrow er; // Unhandled 'error' event\n\t\t\t \n\nError: read ECONNRESET\n\t\tat TCP.onStreamRead (internal/stream_base_commons.js:209:20)\nEmitted 'error' event on Socket instance at:\n\t\tat emitErrorNT (internal/streams/destroy.js:106:8)\n\t\tat emitErrorCloseNT (internal/streams/destroy.js:74:3)\n\t\tat processTicksAndRejections (internal/process/task_queues.js:80:21) {\n\terrno:\t104,\n\tcode: 'ECONNRESET',\n\tsyscall: 'read'\n}\n```\n\nThis impacts all the users of the [`engine.io` (https://www.npmjs.com/package/engine.io) package, including those who uses depending packages like [`socket.io` (https://www.npmjs.com/package/socket.io).\n\n### Patches\n\nA fix has been released today (2022/11/20):\n\n| Version range\t\t | Fixed version |\n|\t\t\t\t\t\t\t\t\t |\t\t\t\t\t\t\t |\n| `engine.io@3.x.y` | `3.6.1`\t\t\t |\n| `engine.io@6.x.y` | `6.2.1`\t\t\t |\n\nFor `socket.io` users:\n\n| Version range\t\t\t\t\t\t\t | `engine.io` version | Needs minor update?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n|\t\t\t\t\t\t\t\t\t\t\t\t\t\t |\t\t\t\t\t\t\t\t\t\t |\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `socket.io@4.5.x`\t\t\t\t\t | `~6.2.0`\t\t\t\t\t\t| `npm audit fix` should be sufficient\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t |\n| `socket.io@4.4.x`\t\t\t\t\t | `~6.1.0`\t\t\t\t\t\t| Please upgrade to `socket.io@4.5.x`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `socket.io@4.3.x`\t\t\t\t\t | `~6.0.0`\t\t\t\t\t\t| Please upgrade to `socket.io@4.5.x`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `socket.io@4.2.x`\t\t\t\t\t | `~5.2.0`\t\t\t\t\t\t| Please upgrade to `socket.io@4.5.x`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `socket.io@4.1.x`\t\t\t\t\t | `~5.1.1`\t\t\t\t\t\t| Please upgrade to `socket.io@4.5.x`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `socket.io@4.0.x`\t\t\t\t\t | `~5.0.0`\t\t\t\t\t\t| Please upgrade to `socket.io@4.5.x`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `socket.io@3.1.x`\t\t\t\t\t | `~4.1.0`\t\t\t\t\t\t| Please upgrade to `socket.io@4.5.x` (see [here (https://socket.io/docs/v4/migrating from 3 x to 4 0/)) |\n| `socket.io@3.0.x`\t\t\t\t\t | `~4.0.0`\t\t\t\t\t\t| Please upgrade to `socket.io@4.5.x` (see [here (https://socket.io/docs/v4/migrating from 3 x to 4 0/)) |\n| `socket.io@2.5.0`\t\t\t\t\t | `~3.6.0`\t\t\t\t\t\t| `npm audit fix` should be sufficient\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t |\n| `socket.io@2.4.x` and below | `~3.5.0`\t\t\t\t\t\t| Please upgrade to `socket.io@2.5.0`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n\n### Workarounds\n\nThere is no known workaround except upgrading to a safe version.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [`engine.io` (https://github.com/socketio/engine.io)\n\nThanks to [Jonathan Neve (https://github.com/jonathanneve) for the responsible disclosure.\n\nUpgrade to version 3.6.1 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2020-36049", "package": "npm:socket.io-parser", "purl": "pkg:npm/socket.io-parser@2.2.2", "package_type": "npm", "package_usage": "required", "version": "2.2.2", "fix_version": "3.3.4", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Resource exhaustion in socket.io parser\nThe `socket.io parser` npm package before versions 3.3.2 and 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.\nUpgrade to version 3.3.2 or later", "related_urls": [], "occurrence_count": 7, "reachable_flows": 0}
{"id": "CVE-2020-7729", "package": "npm:grunt", "purl": "pkg:npm/grunt@0.4.2", "package_type": "npm", "package_usage": "required", "version": "0.4.2", "fix_version": "1.5.3", "severity": "HIGH", "cvss_score": "7.1", "short_description": "# Arbitrary Code Execution in grunt\nThe package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js yaml inside grunt.file.readYAML.\nUpgrade to version 1.3.0 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2020-7753", "package": "npm:trim", "purl": "pkg:npm/trim@0.0.1", "package_type": "npm", "package_usage": "required", "version": "0.0.1", "fix_version": "0.0.3", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in trim\nAll versions of package trim lower than 0.0.3 are vulnerable to Regular Expression Denial of Service (ReDoS) via trim().\nUpgrade to version 0.0.3 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2018-21036", "package": "npm:sails-hook-sockets", "purl": "pkg:npm/sails-hook-sockets@0.12.3", "package_type": "npm", "package_usage": "optional", "version": "0.12.3", "fix_version": "1.5.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Improper Input Validation in sails hook sockets\nSails.js before v1.0.0 46 allows attackers to cause a denial of service with a single request because there is no error handler in sails hook sockets to handle an empty pathname in a WebSocket request.\nUpgrade to version 1.5.5 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-16113", "package": "npm:parsejson", "purl": "pkg:npm/parsejson@0.0.1", "package_type": "npm", "package_usage": "required", "version": "0.0.1", "fix_version": null, "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in parsejson\nAffected versions of `parsejson` are vulnerable to a regular expression denial of service when parsing untrusted user input.\n\n\n## Recommendation\n\nThe `parsejson` package has not been functionally updated since it was initially released.\n\nAdditionally, it provides functionality which is natively included in Node.js, and therefore the native `JSON.parse()` should be used, for both performance and security reasons.\nNone", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "NPM-1090859", "package": "npm:base64-url", "purl": "pkg:npm/base64-url@1.2.1", "package_type": "npm", "package_usage": "required", "version": "1.2.1", "fix_version": "2.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Out of bounds Read in base64 url\nVersions of `base64 url` before 2.0.0 are vulnerable to out of bounds read as it allocates uninitialized Buffers when number is passed in input.\n\n\n## Recommendation\n\nUpdate to version 2.0.0 or later.\nUpgrade to version 2.0.0 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2016-10542", "package": "npm:ws", "purl": "pkg:npm/ws@1.1.0", "package_type": "npm", "package_usage": "required", "version": "1.1.0", "fix_version": "1.1.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# DoS due to excessively large websocket message in ws\nAffected versions of `ws` do not appropriately limit the size of incoming websocket payloads, which may result in a denial of service condition when the node process crashes after receiving a large payload.\n\n\n\n## Recommendation\n\nUpdate to version 1.1.1 or later. \nAlternatively, set the `maxpayload` option for the `ws` server to a value smaller than 256MB.\nUpgrade to version 1.1.1 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2015-9235", "package": "npm:jsonwebtoken", "purl": "pkg:npm/jsonwebtoken@4.0.0", "package_type": "npm", "package_usage": "required", "version": "4.0.0", "fix_version": "4.2.2", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Verification Bypass in jsonwebtoken\nVersions 4.2.1 and earlier of `jsonwebtoken` are affected by a verification bypass vulnerability. This is a result of weak validation of the JWT algorithm type, occuring when an attacker is allowed to arbitrarily specify the JWT algorithm.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.2.2 or later.\nUpgrade to version 4.2.2 or later", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2016-10539", "package": "npm:negotiator", "purl": "pkg:npm/negotiator@0.5.3", "package_type": "npm", "package_usage": "required", "version": "0.5.3", "fix_version": "0.6.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in negotiator\nAffected versions of `negotiator` are vulnerable to regular expression denial of service attacks, which trigger upon parsing a specially crafted `Accept Language` header value.\n\n\n\n\n## Recommendation\n\nUpdate to version 0.6.1 or later.\nUpgrade to version 0.6.1 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "NPM-1091478", "package": "npm:ws", "purl": "pkg:npm/ws@1.1.0", "package_type": "npm", "package_usage": "required", "version": "1.1.0", "fix_version": "1.1.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial of Service in ws\nAffected versions of `ws` can crash when a specially crafted `Sec WebSocket Extensions` header containing `Object.prototype` property names as extension or parameter names is sent.\n\n## Proof of concept\n\n```\nconst WebSocket = require('ws');\nconst net = require('net');\n\nconst wss = new WebSocket.Server({ port: 3000 }, function () {\n\tconst payload = 'constructor';\t// or ',;constructor'\n\n\tconst request = [\n\t\t'GET / HTTP/1.1',\n\t\t'Connection: Upgrade',\n\t\t'Sec WebSocket Key: test',\n\t\t'Sec WebSocket Version: 8',\n\t\t`Sec WebSocket Extensions: ${payload}`,\n\t\t'Upgrade: websocket',\n\t\t' r n'\n\t .join(' r n');\n\n\tconst socket = net.connect(3000, function () {\n\t\tsocket.resume();\n\t\tsocket.write(request);\n\t});\n});\n```\n\n\n## Recommendation\n\nUpdate to version 3.3.1 or later.\nUpgrade to version 1.1.5 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2022-1537", "package": "npm:grunt", "purl": "pkg:npm/grunt@0.4.2", "package_type": "npm", "package_usage": "required", "version": "0.4.2", "fix_version": "1.5.3", "severity": "HIGH", "cvss_score": "7.0", "short_description": "# Race Condition in Grunt\nfile.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in GitHub repository gruntjs/grunt prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower privileged user has write access to both source and destination directories as the lower privileged user can create a symlink to the GruntJS user's .bashrc file or replace /etc/shadow file if the GruntJS user is root.\nUpgrade to version 1.5.3 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2022-0436", "package": "npm:grunt", "purl": "pkg:npm/grunt@0.4.2", "package_type": "npm", "package_usage": "required", "version": "0.4.2", "fix_version": "1.5.3", "severity": "MEDIUM", "cvss_score": "5.5", "short_description": "# Path Traversal in Grunt\nGrunt prior to version 1.5.2 is vulnerable to path traversal.\nUpgrade to version 1.5.2 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "NPM-1091669", "package": "npm:clean-css", "purl": "pkg:npm/clean-css@2.1.8", "package_type": "npm", "package_usage": "required", "version": "2.1.8", "fix_version": "4.1.11", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Regular Expression Denial of Service in clean css\nVersion of `clean css` prior to 4.1.11 are vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 4.1.11 or higher.\nUpgrade to version 4.1.11 or later", "related_urls": [], "occurrence_count": 24, "reachable_flows": 0}
{"id": "CVE-2016-2515", "package": "npm:hawk", "purl": "pkg:npm/hawk@1.1.1", "package_type": "npm", "package_usage": "optional", "version": "1.1.1", "fix_version": "3.1.3", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in hawk\nVersions of `hawk` prior to 3.1.3, or 4.x prior to 4.1.1 are affected by a regular expression denial of service vulnerability related to excessively long headers and URI's.\n\n\n\n## Recommendation\n\nUpdate to hawk version 4.1.1 or later.\nUpgrade to version 3.1.3 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "NPM-1091792", "package": "npm:base64url", "purl": "pkg:npm/base64url@1.0.6", "package_type": "npm", "package_usage": "required", "version": "1.0.6", "fix_version": "3.0.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Out of bounds Read in base64url\nVersions of `base64url` before 3.0.0 are vulnerable to to out of bounds reads as it allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.\nUpgrade to version 3.0.0 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2020-7788", "package": "npm:ini", "purl": "pkg:npm/ini@1.3.8", "package_type": "npm", "package_usage": "required", "version": "1.3.8", "fix_version": "1.3.6", "severity": "HIGH", "cvss_score": "7.3", "short_description": "# ini before 1.3.6 vulnerable to Prototype Pollution via ini.parse\n### Overview\nThe `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.\n\nIf an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\n### Patches\n\nThis has been patched in 1.3.6.\n\n### Steps to reproduce\n\npayload.ini\n```\n[__proto__ \npolluted = \"polluted\"\n```\n\npoc.js:\n```\nvar fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf 8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n```\n\n```\n> node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n```\nUpgrade to version 1.3.6 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2021-32820", "package": "npm:express-handlebars", "purl": "pkg:npm/express-handlebars@2.0.1", "package_type": "npm", "package_usage": "required", "version": "2.0.1", "fix_version": "5.3.1", "severity": "HIGH", "cvss_score": "8.6", "short_description": "# Insecure template handling in Express handlebars\nExpress handlebars is a Handlebars view engine for Express. Express handlebars mixes pure template data with engine configuration options through the Express render API. More specifically, the layout parameter may trigger file disclosure vulnerabilities in downstream applications. This potential vulnerability is somewhat restricted in that only files with existing extentions (i.e. file.extension) can be included, files that lack an extension will have `.handlebars` appended to them. For complete details refer to the referenced GHSL 2021 018 report. Notes in documentation have been added to help users avoid this potential information exposure vulnerability.\n\nA fix is discussed in https://github.com/express handlebars/express handlebars/pull/163\nUpgrade to version 5.3.1 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2020-28282", "package": "npm:getobject", "purl": "pkg:npm/getobject@0.1.0", "package_type": "npm", "package_usage": "required", "version": "0.1.0", "fix_version": "1.0.0", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Prototype pollution in getobject\nPrototype pollution vulnerability in 'getobject' version 0.1.0 allows an attacker to cause a denial of service and may lead to remote code execution.\nUpgrade to version 1.0.0 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2017-1000228", "package": "npm:ejs", "purl": "pkg:npm/ejs@0.8.8", "package_type": "npm", "package_usage": "required", "version": "0.8.8", "fix_version": "2.5.5", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# ejs is vulnerable to remote code execution due to weak input validation\nnodejs ejs versions older than 2.5.3 is vulnerable to remote code execution due to weak input validation in `ejs.renderFile()` function\nUpgrade to version 2.5.5 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2017-1000189", "package": "npm:ejs", "purl": "pkg:npm/ejs@0.8.8", "package_type": "npm", "package_usage": "required", "version": "0.8.8", "fix_version": "2.5.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# ejs vulnerable to DoS due to weak input validation\nnodejs ejs version older than 2.5.5 is vulnerable to a denial of service due to weak input validation in `ejs.renderFile()`\nUpgrade to version 2.5.5 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2017-1000188", "package": "npm:ejs", "purl": "pkg:npm/ejs@0.8.8", "package_type": "npm", "package_usage": "required", "version": "0.8.8", "fix_version": "2.5.5", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# mde ejs vulnerable to XSS\nnodejs ejs version older than 2.5.5 is vulnerable to a Cross site scripting in the `ejs.renderFile()` resulting in code injection\nUpgrade to version 2.5.5 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2017-16119", "package": "npm:fresh", "purl": "pkg:npm/fresh@0.3.0", "package_type": "npm", "package_usage": "required", "version": "0.3.0", "fix_version": "0.5.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in fresh\nAffected versions of `fresh` are vulnerable to regular expression denial of service when parsing specially crafted user input.\n\n\n## Recommendation\n\nUpdate to version 0.5.2 or later.\nUpgrade to version 0.5.2 or later", "related_urls": [], "occurrence_count": 6, "reachable_flows": 0}
{"id": "CVE-2020-28481", "package": "npm:socket.io", "purl": "pkg:npm/socket.io@1.4.8", "package_type": "npm", "package_usage": "required", "version": "1.4.8", "fix_version": "2.5.1", "severity": "MEDIUM", "cvss_score": "4.3", "short_description": "# CORS misconfiguration in socket.io\nThe package socket.io before 2.4.0 are vulnerable to Insecure Defaults due to CORS Misconfiguration. All domains are whitelisted by default.\nUpgrade to version 2.4.0 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2017-16026", "package": "npm:request", "purl": "pkg:npm/request@2.40.0", "package_type": "npm", "package_usage": "required", "version": "2.40.0", "fix_version": "2.68.0", "severity": "MEDIUM", "cvss_score": "5.9", "short_description": "# Remote Memory Exposure in request\nAffected versions of `request` will disclose local system memory to remote systems in certain circumstances. When a multipart request is made, and the type of `body` is `number`, then a buffer of that size will be allocated and sent to the remote server as the body.\n\n## Proof of Concept\n\n```js\nvar request = require('request');\nvar http = require('http');\n\nvar serveFunction = function (req, res){\n\treq.on('data', function (data) {\n\t\t\t\t\t\tconsole.log(data)\n\t\t\t\t});\n\tres.end();\n};\nvar server = http.createServer(serveFunction);\nserver.listen(8000);\n\nrequest({\n\tmethod: \"POST\",\n\turi: 'http://localhost:8000',\n\tmultipart: [{body:500} \n},function(err,res,body){});\n```\n\n\n## Recommendation\n\nUpdate to version 2.68.0 or later\nUpgrade to version 2.68.0 or later", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2017-16138", "package": "npm:mime", "purl": "pkg:npm/mime@1.2.11", "package_type": "npm", "package_usage": "required", "version": "1.2.11", "fix_version": "1.4.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# mime Regular Expression Denial of Service when MIME lookup performed on untrusted user input\nAffected versions of `mime` are vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.\n\n\n## Recommendation\n\nUpdate to version 2.0.3 or later.\nUpgrade to version 1.4.1 or later", "related_urls": [], "occurrence_count": 30, "reachable_flows": 0}
{"id": "CVE-2019-5413", "package": "npm:morgan", "purl": "pkg:npm/morgan@1.6.1", "package_type": "npm", "package_usage": "required", "version": "1.6.1", "fix_version": "1.9.1", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Code Injection in morgan\nVerisons of `morgan` before 1.9.1 are vulnerable to code injection when user input is allowed into the filter or combined with a prototype pollution attack.\n\n\n## Recommendation\n\nUpdate to version 1.9.1 or later.\nUpgrade to version 1.9.1 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2018-3728", "package": "npm:hoek", "purl": "pkg:npm/hoek@0.9.1", "package_type": "npm", "package_usage": "required", "version": "0.9.1", "fix_version": "4.2.1", "severity": "HIGH", "cvss_score": "8.8", "short_description": "# Prototype Pollution in hoek\nVersions of `hoek` prior to 4.2.1 and 5.0.3 are vulnerable to prototype pollution.\n\nThe `merge` function, and the `applyToDefaults` and `applyToDefaultsWithShallow` functions which leverage `merge` behind the scenes, are vulnerable to a prototype pollution attack when provided an _unvalidated_ payload created from a JSON string containing the `__proto__` property.\n\nThis can be demonstrated like so:\n\n```javascript\nvar Hoek = require('hoek');\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\n\nvar a = {};\nconsole.log(\"Before : \" + a.oops);\nHoek.merge({}, JSON.parse(malicious_payload));\nconsole.log(\"After : \" + a.oops);\n```\n\nThis type of attack can be used to overwrite existing properties causing a potential denial of service.\n\n\n## Recommendation\n\nUpdate to version 4.2.1, 5.0.3 or later.\nUpgrade to version 4.2.1 or later", "related_urls": [], "occurrence_count": 5, "reachable_flows": 0}
{"id": "CVE-2015-9251", "package": "npm:jquery", "purl": "pkg:npm/jquery@2.2.1", "package_type": "npm", "package_usage": "optional", "version": "2.2.1", "fix_version": "3.5.0", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# Cross Site Scripting (XSS) in jquery\nAffected versions of `jquery` interpret `text/javascript` responses from cross origin ajax requests, and automatically execute the contents in `jQuery.globalEval`, even when the ajax request doesn't contain the `dataType` option.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.\nUpgrade to version 3.0.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-11022", "package": "npm:jquery", "purl": "pkg:npm/jquery@2.2.1", "package_type": "npm", "package_usage": "optional", "version": "2.2.1", "fix_version": "3.5.0", "severity": "MEDIUM", "cvss_score": "6.9", "short_description": "# Potential XSS vulnerability in jQuery\n### Impact\nPassing HTML from untrusted sources\t even after sanitizing it\t to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround the issue without upgrading, adding the following to your code:\n\n```js\njQuery.htmlPrefilter = function( html ) {\n\treturn html;\n};\n```\n\nYou need to use at least jQuery 1.12/2.2 or newer to be able to apply this workaround.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery 3 5 0 released/\nhttps://jquery.com/upgrade guide/3.5/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo (https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.\nUpgrade to version 3.5.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-20162", "package": "npm:ms", "purl": "pkg:npm/ms@0.7.1", "package_type": "npm", "package_usage": "required", "version": "0.7.1", "fix_version": "2.0.0", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Vercel ms Inefficient Regular Expression Complexity vulnerability\nA vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The name of the patch is caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB 217451.\nUpgrade to version 2.0.0 or later", "related_urls": [], "occurrence_count": 7, "reachable_flows": 0}
{"id": "CVE-2023-38504", "package": "npm:sails", "purl": "pkg:npm/sails@0.11.5", "package_type": "npm", "package_usage": "required", "version": "0.11.5", "fix_version": "1.5.7", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# DoS vulnerability for apps with sockets enabled\n### Impact\nIn Sails apps <=v1.5.6, an attacker can send a virtual request that will cause the node process to crash. \n\n### Patches\nThis behavior was fixed in Sails [v1.5.7 (https://github.com/balderdashy/sails/releases/tag/v1.5.7)\n\n### Workarounds\nDisable the sockets hook and remove the `sails.io.js` client\n\n### References\nhttps://github.com/balderdashy/sails/pull/7287\n\nBig thanks to @ThomasRinsma at [Codean (https://www.linkedin.com/company/codeanio/)!\nUpgrade to version 1.5.7 or later", "related_urls": [], "occurrence_count": 6, "reachable_flows": 0}
{"id": "CVE-2018-3750", "package": "npm:deep-extend", "purl": "pkg:npm/deep-extend@0.2.11", "package_type": "npm", "package_usage": "required", "version": "0.2.11", "fix_version": "0.5.1", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Prototype Pollution in deep extend\nVersions of `deep extend` before 0.5.1 are vulnerable to prototype pollution.\n\n\n## Recommendation\n\nUpdate to version 0.5.1 or later.\nUpgrade to version 0.5.1 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "NPM-1095058", "package": "npm:js-yaml", "purl": "pkg:npm/js-yaml@2.0.5", "package_type": "npm", "package_usage": "required", "version": "2.0.5", "fix_version": "3.13.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Code Injection in js yaml\nVersions of `js yaml` prior to 3.13.1 are vulnerable to Code Injection. The `load()` function may execute arbitrary code injected through a malicious YAML file. Objects that have `toString` as key, JavaScript code as value and are used as explicit mapping keys allow attackers to execute the supplied code through the `load()` function. The `safeLoad()` function is unaffected.\n\nAn example payload is \n`{ toString: !<tag:yaml.org,2002:js/function> 'function (){return Date.now()}' } : 1` \nwhich returns the object \n{\n\t\"1553107949161\": 1\n}\n\n\n## Recommendation\n\nUpgrade to version 3.13.1.\nUpgrade to version 3.13.1 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2022-29167", "package": "npm:hawk", "purl": "pkg:npm/hawk@1.1.1", "package_type": "npm", "package_usage": "optional", "version": "1.1.1", "fix_version": "9.0.1", "severity": "HIGH", "cvss_score": "7.4", "short_description": "# Uncontrolled Resource Consumption in Hawk\nHawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack\t meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built in `URL` class to parse hostname instead.`Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.\nUpgrade to version 9.0.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-23369", "package": "npm:handlebars", "purl": "pkg:npm/handlebars@3.0.8", "package_type": "npm", "package_usage": "required", "version": "3.0.8", "fix_version": "4.7.7", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Remote code execution in handlebars when compiling templates\nThe package handlebars before 4.7.7 are vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.\nUpgrade to version 4.7.7 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2020-28502", "package": "npm:xmlhttprequest-ssl", "purl": "pkg:npm/xmlhttprequest-ssl@1.5.1", "package_type": "npm", "package_usage": "required", "version": "1.5.1", "fix_version": "1.6.2", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# xmlhttprequest and xmlhttprequest ssl vulnerable to Arbitrary Code Injection\nThis affects the package xmlhttprequest before 1.7.0; all versions of package xmlhttprequest ssl. Provided requests are sent synchronously (`async=False` on `xhr.open`), malicious user input flowing into `xhr.send` could result in arbitrary code being injected and run.\nUpgrade to version 1.6.2 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2021-31597", "package": "npm:xmlhttprequest-ssl", "purl": "pkg:npm/xmlhttprequest-ssl@1.5.1", "package_type": "npm", "package_usage": "required", "version": "1.5.1", "fix_version": "1.6.2", "severity": "CRITICAL", "cvss_score": "9.4", "short_description": "# Improper Certificate Validation in xmlhttprequest ssl\nThe xmlhttprequest ssl package before 1.6.1 for Node.js disables SSL certificate validation by default, because rejectUnauthorized (when the property exists but is undefined) is considered to be false within the https.request function of Node.js. In other words, no certificate is ever rejected.\nUpgrade to version 1.6.1 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2021-3765", "package": "npm:validator", "purl": "pkg:npm/validator@3.41.2", "package_type": "npm", "package_usage": "required", "version": "3.41.2", "fix_version": "13.7.0", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Inefficient Regular Expression Complexity in validator.js\nvalidator.js prior to 13.7.0 is vulnerable to Inefficient Regular Expression Complexity\nUpgrade to version 13.7.0 or later", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2021-23358", "package": "npm:underscore", "purl": "pkg:npm/underscore@1.7.0", "package_type": "npm", "package_usage": "required", "version": "1.7.0", "fix_version": "1.12.1", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Arbitrary Code Execution in underscore\nThe package `underscore` from 1.13.0 0 and before 1.13.0 2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.\nUpgrade to version 1.12.1 or later", "related_urls": [], "occurrence_count": 8, "reachable_flows": 0}
{"id": "CVE-2021-23383", "package": "npm:handlebars", "purl": "pkg:npm/handlebars@3.0.8", "package_type": "npm", "package_usage": "required", "version": "3.0.8", "fix_version": "4.7.7", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Prototype Pollution in handlebars\nThe package handlebars before 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.\nUpgrade to version 4.7.7 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2020-36604", "package": "npm:hoek", "purl": "pkg:npm/hoek@0.9.1", "package_type": "npm", "package_usage": "required", "version": "0.9.1", "fix_version": "4.2.1", "severity": "HIGH", "cvss_score": "8.1", "short_description": "# hoek subject to prototype pollution via the clone function.\nhoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the __proto__ key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. \nNone", "related_urls": [], "occurrence_count": 5, "reachable_flows": 0}
{"id": "CVE-2020-7598", "package": "npm:minimist", "purl": "pkg:npm/minimist@1.2.8", "package_type": "npm", "package_usage": "required", "version": "1.2.8", "fix_version": "1.2.3", "severity": "MEDIUM", "cvss_score": "5.6", "short_description": "# Prototype Pollution in minimist\nAffected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.\t\nParsing the argument `\t__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `\t__proto__=Polluted` raises and uncaught error and crashes the application.\t\nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.\nUpgrade to version 1.2.3 or later", "related_urls": [], "occurrence_count": 8, "reachable_flows": 0}
{"id": "CVE-2022-24999", "package": "npm:qs", "purl": "pkg:npm/qs@1.0.2", "package_type": "npm", "package_usage": "required", "version": "1.0.2", "fix_version": "6.2.4", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# qs vulnerable to Prototype Pollution\nqs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__ =b&a[__proto__ &a[length =100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.\nUpgrade to version 6.2.4 or later", "related_urls": [], "occurrence_count": 7, "reachable_flows": 0}
{"id": "CVE-2023-28155", "package": "npm:request", "purl": "pkg:npm/request@2.40.0", "package_type": "npm", "package_usage": "required", "version": "2.40.0", "fix_version": "2.68.0", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# Server Side Request Forgery in Request\nThe `request` package through 2.88.2 for Node.js and the `@cypress/request` package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker controller server that does a cross protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\n\nNOTE: The `request` package is no longer supported by the maintainer.\nNone", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2024-29041", "package": "npm:express", "purl": "pkg:npm/express@3.21.2", "package_type": "npm", "package_usage": "required", "version": "3.21.2", "fix_version": "4.20.0", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# Express.js Open Redirect in malformed URLs\n### Impact\n\nVersions of Express.js prior to 4.19.2 and pre release alpha and beta versions before 5.0.0 beta.3 are affected by an open redirect vulnerability using malformed URLs.\n\nWhen a user of Express performs a redirect using a user provided URL Express performs an encode [using `encodeurl` (https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list.\n\nThe main method impacted is `res.location()` but this is also called from within `res.redirect()`.\n\n### Patches\n\nhttps://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd\nhttps://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94\n\nAn initial fix went out with `express@4.19.0`, we then patched a feature regression in `4.19.1` and added improved handling for the bypass in `4.19.2`.\n\n### Workarounds\n\nThe fix for this involves pre parsing the url string with either `require('node:url').parse` or `new URL`. These are steps you can take on your own before passing the user input string to `res.location` or `res.redirect`.\n\n### References\n\nhttps://github.com/expressjs/express/pull/5539\nhttps://github.com/koajs/koa/issues/1800\nhttps://expressjs.com/en/4x/api.html#res.location\nUpgrade to version 4.19.2 or later", "related_urls": [], "occurrence_count": 10, "reachable_flows": 0}
{"id": "CVE-2022-2421", "package": "npm:socket.io-parser", "purl": "pkg:npm/socket.io-parser@2.2.2", "package_type": "npm", "package_usage": "required", "version": "2.2.2", "fix_version": "3.3.4", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Insufficient validation when decoding a Socket.IO packet\nDue to improper type validation in the `socket.io parser` library (which is used by the `socket.io` and `socket.io client` packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.\n\nExample:\n\n```js\nconst decoder = new Decoder();\n\ndecoder.on(\"decoded\", (packet) => {\n console.log(packet.data); // prints [ 'hello', [Function: splice\t \n})\n\ndecoder.add('51 [\"hello\",{\"_placeholder\":true,\"num\":\"splice\"} ');\ndecoder.add(Buffer.from(\"world\"));\n```\n\nThis bubbles up in the `socket.io` package:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // here, \"val\" could be a function instead of a buffer\n });\n});\n```\n\n:warning: IMPORTANT NOTE :warning:\n\nYou need to make sure that the payload that you received from the client is actually a `Buffer` object:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n socket.disconnect();\n return;\n }\n // ...\n });\n});\n```\n\n**If that's already the case, then you are not impacted by this issue, and there is no way an attacker could make your server crash (or escalate privileges, ...).**\n\nExample of values that could be sent by a malicious user:\n\n\ta number that is out of bounds\n\nSample packet: `451 [\"hello\",{\"_placeholder\":true,\"num\":10} `\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n\ta value that is not a number, like `undefined`\n\nSample packet: `451 [\"hello\",{\"_placeholder\":true,\"num\":undefined} `\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n\ta string that is part of the prototype of `Array`, like \"push\"\n\nSample packet: `451 [\"hello\",{\"_placeholder\":true,\"num\":\"push\"} `\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"push\" function\n });\n});\n```\n\n\ta string that is part of the prototype of `Object`, like \"hasOwnProperty\"\n\nSample packet: `451 [\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"} `\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"hasOwnProperty\" function\n });\n});\n```\n\nThis should be fixed by:\n\n\thttps://github.com/socketio/socket.io parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, included in `socket.io parser@4.2.1`\n\thttps://github.com/socketio/socket.io parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, included in `socket.io parser@4.0.5`\n\thttps://github.com/socketio/socket.io parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, included in `socket.io parser@3.4.2`\n\thttps://github.com/socketio/socket.io parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, included in `socket.io parser@3.3.3`\n\n### Dependency analysis for the `socket.io` package\n\n| `socket.io` version | `socket.io parser` version | Covered? |\n|\t\t\t\t\t\t\t\t\t\t |\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t |\t\t\t\t\t\t\t\t\t\t\t\t|\n| `4.5.2...latest` | `~4.2.0` ([ref (https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | Yes :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref (https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | Yes :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref (https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref (https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | Yes :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref (https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | Yes :heavy_check_mark: |\n\n\n### Dependency analysis for the `socket.io client` package\n\n| `socket.io client` version | `socket.io parser` version | Covered? |\n|\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `4.5.0...latest` | `~4.2.0` ([ref (https://github.com/socketio/socket.io client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | Yes :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref (https://github.com/socketio/socket.io client/commit/91b948b8607166fcc79f028a6428819277214188)) | No, but the impact is very limited |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref (https://github.com/socketio/socket.io client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | Yes :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref (https://github.com/socketio/socket.io client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref (https://github.com/socketio/socket.io client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | Yes :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref (https://github.com/socketio/socket.io client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | Yes :heavy_check_mark: |\n\nUpgrade to version 3.3.3 or later", "related_urls": [], "occurrence_count": 7, "reachable_flows": 0}
{"id": "CVE-2019-11358", "package": "npm:jquery", "purl": "pkg:npm/jquery@2.2.1", "package_type": "npm", "package_usage": "optional", "version": "2.2.1", "fix_version": "3.5.0", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# XSS in jQuery as used in Drupal, Backdrop CMS, and other products\njQuery from 1.1.4 until 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles `jQuery.extend(true, {}, ...)` because of `Object.prototype` pollution. If an unsanitized source object contained an enumerable `__proto__` property, it could extend the native `Object.prototype`.\nUpgrade to version 3.4.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-11023", "package": "npm:jquery", "purl": "pkg:npm/jquery@2.2.1", "package_type": "npm", "package_usage": "optional", "version": "2.2.1", "fix_version": "3.5.0", "severity": "MEDIUM", "cvss_score": "6.9", "short_description": "# Potential XSS vulnerability in jQuery\n### Impact\nPassing HTML containing `<option>` elements from untrusted sources\t even after sanitizing them\t to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround this issue without upgrading, use [DOMPurify (https://github.com/cure53/DOMPurify) with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery 3 5 0 released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo (https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.\nUpgrade to version 3.5.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-44906", "package": "npm:minimist", "purl": "pkg:npm/minimist@1.2.8", "package_type": "npm", "package_usage": "required", "version": "1.2.8", "fix_version": "1.2.6", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Prototype Pollution in minimist\nMinimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69 95).\nUpgrade to version 1.2.6 or later", "related_urls": [], "occurrence_count": 8, "reachable_flows": 0}
{"id": "CVE-2022-23540", "package": "npm:jsonwebtoken", "purl": "pkg:npm/jsonwebtoken@4.0.0", "package_type": "npm", "package_usage": "required", "version": "4.0.0", "fix_version": "9.0.0", "severity": "MEDIUM", "cvss_score": "6.4", "short_description": "# jsonwebtoken vulnerable to signature validation bypass due to insecure default algorithm in jwt.verify()\n# Overview\n\nIn versions <=8.5.1 of jsonwebtoken library, lack of algorithm definition and a falsy secret or key in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification.\n\n# Am I affected?\nYou will be affected if all the following are true in the `jwt.verify()` function:\n\ta token with no signature is received\n\tno algorithms are specified \n\ta falsy (e.g. null, false, undefined) secret or key is passed \n\n# How do I fix it?\n \nUpdate to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. \n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you don\u2019t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.\n\nUpgrade to version 9.0.0 or later", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2022-23539", "package": "npm:jsonwebtoken", "purl": "pkg:npm/jsonwebtoken@4.0.0", "package_type": "npm", "package_usage": "required", "version": "4.0.0", "fix_version": "9.0.0", "severity": "HIGH", "cvss_score": "8.1", "short_description": "# jsonwebtoken unrestricted key type could lead to legacy keys usage \n# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. \n\n# Am I affected?\n\nYou are affected if you are using an algorithm and a key type other than the combinations mentioned below\n\n| Key type |\talgorithm\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n|\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| ec\t\t\t\t\t | ES256, ES384, ES512\t\t\t\t\t\t\t\t\t\t\t|\n| rsa\t\t\t\t\t| RS256, RS384, RS512, PS256, PS384, PS512 |\n| rsa pss\t| PS256, PS384, PS512\t\t\t\t\t\t\t\t\t\t\t|\n\nAnd for Elliptic Curve algorithms:\n\n| `alg` | Curve\t\t\t|\n|\t\t\t |\t\t\t\t\t\t|\n| ES256 | prime256v1 |\n| ES384 | secp384r1\t|\n| ES512 | secp521r1\t|\n\n# How do I fix it?\n\nUpdate to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, If you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you\u2019ll need to set the `allowInvalidAsymmetricKeyTypes` option to `true` in the `sign()` and/or `verify()` functions.\n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you already use a valid secure combination of key type and algorithm. Otherwise,\tuse the\t`allowInvalidAsymmetricKeyTypes` option\tto `true` in the `sign()` and `verify()` functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility. \n\n\nUpgrade to version 9.0.0 or later", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2022-23541", "package": "npm:jsonwebtoken", "purl": "pkg:npm/jsonwebtoken@4.0.0", "package_type": "npm", "package_usage": "required", "version": "4.0.0", "fix_version": "9.0.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# jsonwebtoken's insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC\n# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function (referring to the `secretOrPublicKey` argument from the [readme link (https://github.com/auth0/node jsonwebtoken#jwtverifytoken secretorpublickey options callback)) will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification\tthan the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. \n\n# Am I affected?\n\nYou will be affected if your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. \n\n# How do I fix it?\n \nUpdate to version 9.0.0.\n\n# Will the fix impact my users?\n\nThere is no impact for end users\nUpgrade to version 9.0.0 or later", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2023-32695", "package": "npm:socket.io-parser", "purl": "pkg:npm/socket.io-parser@2.2.2", "package_type": "npm", "package_usage": "required", "version": "2.2.2", "fix_version": "3.3.4", "severity": "HIGH", "cvss_score": "7.3", "short_description": "# Insufficient validation when decoding a Socket.IO packet\n### Impact\n\nA specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.\n\n```\nTypeError: Cannot convert object to primitive value\n\t\t\t at Socket.emit (node:events:507:25)\n\t\t\t at .../node_modules/socket.io/lib/socket.js:531:14\n```\n\n### Patches\n\nA fix has been released today (2023/05/22):\n\n\thttps://github.com/socketio/socket.io parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3, included in `socket.io parser@4.2.3`\n\thttps://github.com/socketio/socket.io parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced, included in `socket.io parser@3.4.3`\n\n\nAnother fix has been released for the `3.3.x` branch:\n\n\thttps://github.com/socketio/socket.io parser/commit/ee006607495eca4ec7262ad080dd3a91439a5ba4, included in `socket.io parser@3.3.4\n\n| `socket.io` version | `socket.io parser` version\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Needs minor update?\t\t\t\t\t\t\t\t\t|\n|\t\t\t\t\t\t\t\t\t\t |\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t |\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `4.5.2...latest`\t\t| `~4.2.0` ([ref (https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | `npm audit fix` should be sufficient |\n| `4.1.3...4.5.1`\t\t | `~4.1.1` ([ref (https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | Please upgrade to `socket.io@4.6.x`\t|\n| `3.0.5...4.1.2`\t\t | `~4.0.3` ([ref (https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | Please upgrade to `socket.io@4.6.x`\t|\n| `3.0.0...3.0.4`\t\t | `~4.0.1` ([ref (https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | Please upgrade to `socket.io@4.6.x`\t|\n| `2.3.0...2.5.0`\t\t | `~3.4.0` ([ref (https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | `npm audit fix` should be sufficient |\n\n\n### Workarounds\n\nThere is no known workaround except upgrading to a safe version.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n\tOpen a discussion [here (https://github.com/socketio/socket.io/discussions)\n\nThanks to [@rafax00 (https://github.com/rafax00) for the responsible disclosure.\n\nUpgrade to version 3.3.4 or later", "related_urls": [], "occurrence_count": 7, "reachable_flows": 0}
{"id": "CVE-2024-33883", "package": "npm:ejs", "purl": "pkg:npm/ejs@0.8.8", "package_type": "npm", "package_usage": "required", "version": "0.8.8", "fix_version": "3.1.10", "severity": "MEDIUM", "cvss_score": "4.0", "short_description": "# ejs lacks certain pollution protection\nThe ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.\nUpgrade to version 3.1.10 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2024-38355", "package": "npm:socket.io", "purl": "pkg:npm/socket.io@1.4.8", "package_type": "npm", "package_usage": "required", "version": "1.4.8", "fix_version": "2.5.1", "severity": "HIGH", "cvss_score": "7.3", "short_description": "# socket.io has an unhandled 'error' event\n### Impact\n\nA specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.\n\n```\nnode:events:502\n\t\tthrow err; // Unhandled 'error' event\n\t\t \n\nError [ERR_UNHANDLED_ERROR : Unhandled error. (undefined)\n\t\tat new NodeError (node:internal/errors:405:5)\n\t\tat Socket.emit (node:events:500:17)\n\t\tat /myapp/node_modules/socket.io/lib/socket.js:531:14\n\t\tat process.processTicksAndRejections (node:internal/process/task_queues:77:11) {\n\tcode: 'ERR_UNHANDLED_ERROR',\n\tcontext: undefined\n}\n```\n\n### Affected versions\n\n| Version range\t\t| Needs minor update?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n|\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| `4.6.2...latest` | Nothing to do\t\t\t\t\t\t\t |\n| `3.0.0...4.6.1`\t| Please upgrade to `socket.io@4.6.2` (at least) |\n| `2.3.0...2.5.0`\t| Please upgrade to `socket.io@2.5.1`\t\t\t\t\t\t|\n\n### Patches\n\nThis issue is fixed by https://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115, included in `socket.io@4.6.2` (released in May 2023).\n\nThe fix was backported in the 2.x branch today: https://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c\n\n### Workarounds\n\nAs a workaround for the affected versions of the `socket.io` package, you can attach a listener for the \"error\" event:\n\n```js\nio.on(\"connection\", (socket) => {\n\tsocket.on(\"error\", () => {\n\t\t// ...\n\t});\n});\n```\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n\tOpen a discussion [here (https://github.com/socketio/socket.io/discussions)\n\nThanks a lot to [Paul Taylor (https://github.com/Y0ursTruly) for the responsible disclosure.\n\n### References\n\n\thttps://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115\n\thttps://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c\n\nUpgrade to version 2.5.1 or later", "related_urls": [], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2022-25883", "package": "npm:semver", "purl": "pkg:npm/semver@4.3.6", "package_type": "npm", "package_usage": "required", "version": "4.3.6", "fix_version": "5.7.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# semver vulnerable to Regular Expression Denial of Service\nVersions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\nUpgrade to version 5.7.2 or later", "related_urls": [], "occurrence_count": 5, "reachable_flows": 0}
{"id": "CVE-2024-45590", "package": "npm:body-parser", "purl": "pkg:npm/body-parser@1.13.3", "package_type": "npm", "package_usage": "required", "version": "1.13.3", "fix_version": "1.20.3", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# body parser vulnerable to denial of service when url encoding is enabled\n### Impact\n\nbody parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service.\n\n### Patches\n\nthis issue is patched in 1.20.3\n\n### References\n\nUpgrade to version 1.20.3 or later", "related_urls": [], "occurrence_count": 5, "reachable_flows": 0}
{"id": "CVE-2024-43799", "package": "npm:send", "purl": "pkg:npm/send@0.13.2", "package_type": "npm", "package_usage": "required", "version": "0.13.2", "fix_version": "0.19.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# send vulnerable to template injection that can lead to XSS\n### Impact\n\npassing untrusted user input\t even after sanitizing it\t to `SendStream.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in send 0.19.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 0.19.0 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2024-43800", "package": "npm:serve-static", "purl": "pkg:npm/serve-static@1.10.3", "package_type": "npm", "package_usage": "required", "version": "1.10.3", "fix_version": "1.16.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# serve static vulnerable to template injection that can lead to XSS\n### Impact\n\npassing untrusted user input\t even after sanitizing it\t to `redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in serve static 1.16.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 1.16.0 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2024-43796", "package": "npm:express", "purl": "pkg:npm/express@3.21.2", "package_type": "npm", "package_usage": "required", "version": "3.21.2", "fix_version": "4.20.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# express vulnerable to XSS via response.redirect()\n### Impact\n\nIn express <4.20.0, passing untrusted user input\t even after sanitizing it\t to `response.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in express 4.20.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 4.20.0 or later", "related_urls": [], "occurrence_count": 10, "reachable_flows": 0}
{"id": "GHSA-wxhq-pm8v-cw75", "package": "npm:clean-css", "purl": "pkg:npm/clean-css@2.1.8", "package_type": "npm", "package_usage": "required", "version": "2.1.8", "fix_version": "4.1.11", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Regular Expression Denial of Service in clean-css\nVersion of `clean-css` prior to 4.1.11 are vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 4.1.11 or higher.", "related_urls": ["https://github.com/jakubpawlowicz/clean-css/commit/2929bafbf8cdf7dccb24e0949c70833764fa87e3", "https://www.npmjs.com/advisories/785"], "occurrence_count": 24, "reachable_flows": 0}
{"id": "GHSA-rvg8-pwq2-xj7q", "package": "npm:base64url", "purl": "pkg:npm/base64url@1.0.6", "package_type": "npm", "package_usage": "required", "version": "1.0.6", "fix_version": "3.0.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Out-of-bounds Read in base64url\nVersions of `base64url` before 3.0.0 are vulnerable to to out-of-bounds reads as it allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.", "related_urls": ["https://github.com/brianloveswords/base64url/pull/25", "https://github.com/brianloveswords/base64url/commit/4fbd954a0a69e9d898de2146557cc6e893e79542", "https://hackerone.com/reports/321687", "https://github.com/brianloveswords/base64url"], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2019-1010266", "package": "npm:lodash", "purl": "pkg:npm/lodash@2.4.2", "package_type": "npm", "package_usage": "required", "version": "2.4.2", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nlodash prior to 4.7.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.7.11.\n\n## Related CVE(s)\nCVE-2019-1010266, SNYK-JS-LODASH-73639", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2019-1010266", "https://github.com/lodash/lodash/issues/3359", "https://github.com/lodash/lodash/commit/5c08f18d365b64063bfbfa686cbb97cdd6267347", "https://github.com/lodash/lodash/wiki/Changelog", "https://security.netapp.com/advisory/ntap-20190919-0004", "https://snyk.io/vuln/SNYK-JS-LODASH-73639"], "occurrence_count": 250, "reachable_flows": 0}
{"id": "CVE-2018-3721", "package": "npm:lodash", "purl": "pkg:npm/lodash@2.4.2", "package_type": "npm", "package_usage": "required", "version": "2.4.2", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# Prototype Pollution in lodash\nVersions of `lodash` before 4.17.5 are vulnerable to prototype pollution. \n\nThe vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `__proto__` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.5 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2018-3721", "https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a", "https://hackerone.com/reports/310443", "https://github.com/advisories/GHSA-fvqr-27wr-82fm", "https://security.netapp.com/advisory/ntap-20190919-0004", "https://www.npmjs.com/advisories/577"], "occurrence_count": 250, "reachable_flows": 0}
{"id": "CVE-2020-28500", "package": "npm:lodash", "purl": "pkg:npm/lodash@2.4.2", "package_type": "npm", "package_usage": "required", "version": "2.4.2", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nAll versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `toNumber`, `trim` and `trimEnd` functions. \n\nSteps to reproduce (provided by reporter Liyuan Chen):\n```js\nvar lo = require('lodash');\n\nfunction build_blank(n) {\n\t\tvar ret = \"1\"\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tret += \" \"\n\t\t}\n\t\treturn ret + \"1\";\n}\nvar s = build_blank(50000) var time0 = Date.now();\nlo.trim(s) \nvar time_cost0 = Date.now() - time0;\nconsole.log(\"time_cost0: \" + time_cost0);\nvar time1 = Date.now();\nlo.toNumber(s) var time_cost1 = Date.now() - time1;\nconsole.log(\"time_cost1: \" + time_cost1);\nvar time2 = Date.now();\nlo.trimEnd(s);\nvar time_cost2 = Date.now() - time2;\nconsole.log(\"time_cost2: \" + time_cost2);\n```\n\n## Related CVE(s)\nCVE-2020-28500, SNYK-JAVA-ORGFUJIONWEBJARS-1074896, SNYK-JAVA-ORGWEBJARS-1074894, SNYK-JAVA-ORGWEBJARSBOWER-1074892, SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895, SNYK-JAVA-ORGWEBJARSNPM-1074893, SNYK-JS-LODASH-1018905", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2020-28500", "https://github.com/lodash/lodash/pull/5065", "https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7", "https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a", "https://www.oracle.com/security-alerts/cpuoct2021.html", "https://www.oracle.com/security-alerts/cpujul2022.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://snyk.io/vuln/SNYK-JS-LODASH-1018905", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894", "https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896", "https://security.netapp.com/advisory/ntap-20210312-0006", "https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8", "https://github.com/lodash/lodash", "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf"], "occurrence_count": 250, "reachable_flows": 0}
{"id": "GHSA-v2p6-4mp7-3r9v", "package": "npm:underscore.string", "purl": "pkg:npm/underscore.string@2.4.0", "package_type": "npm", "package_usage": "required", "version": "2.4.0", "fix_version": "3.3.5", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service in underscore.string\nVersions of `underscore.string` prior to *3.3.5* are vulnerable to Regular Expression Denial of Service (ReDoS).\n\nThe function `unescapeHTML` is vulnerable to ReDoS due to an overly-broad regex. The slowdown is approximately 2s for 50,000 characters but grows exponentially with larger inputs.\n\n\n## Recommendation\n\nUpgrade to version 3.3.5 or higher.", "related_urls": ["https://github.com/epeli/underscore.string/issues/510", "https://github.com/epeli/underscore.string/pull/517", "https://github.com/epeli/underscore.string/commit/f486cd684c94c12db48b45d52b1472a1b9661029", "https://www.npmjs.com/advisories/745"], "occurrence_count": 10, "reachable_flows": 0}
{"id": "CVE-2019-10744", "package": "npm:lodash", "purl": "pkg:npm/lodash@2.4.2", "package_type": "npm", "package_usage": "required", "version": "2.4.2", "fix_version": "4.17.21", "severity": "CRITICAL", "cvss_score": "9.1", "short_description": "# Prototype Pollution in lodash\nVersions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.\tThe function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.\n\n## Related CVE(s)\nCVE-2019-10744, SNYK-JS-LODASH-450202", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2019-10744", "https://github.com/lodash/lodash/pull/4336", "https://access.redhat.com/errata/RHSA-2019:3024", "https://security.netapp.com/advisory/ntap-20191004-0005", "https://snyk.io/vuln/SNYK-JS-LODASH-450202", "https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp%3Butm_medium=RSS", "https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS", "https://www.npmjs.com/advisories/1065", "https://www.oracle.com/security-alerts/cpujan2021.html", "https://www.oracle.com/security-alerts/cpuoct2020.html"], "occurrence_count": 250, "reachable_flows": 0}
{"id": "CVE-2014-7191", "package": "npm:qs", "purl": "pkg:npm/qs@1.0.2", "package_type": "npm", "package_usage": "required", "version": "1.0.2", "fix_version": "1.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial-of-Service Memory Exhaustion in qs\nVersions prior to 1.0 of `qs` are affected by a denial of service condition. This condition is triggered by parsing a crafted string that deserializes into very large sparse arrays, resulting in the process running out of memory and eventually crashing.\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2014-7191", "https://github.com/visionmedia/node-querystring/issues/104", "https://github.com/raymondfeng/node-querystring/commit/43a604b7847e56bba49d0ce3e222fe89569354d8", "https://access.redhat.com/errata/RHSA-2016:1380", "https://exchange.xforce.ibmcloud.com/vulnerabilities/96729", "https://github.com/advisories/GHSA-jjv7-qpx3-h62q", "https://github.com/visionmedia/node-querystring", "https://www.npmjs.com/advisories/29", "http://secunia.com/advisories/60026", "http://secunia.com/advisories/62170", "http://www-01.ibm.com/support/docview.wss?uid=swg21685987", "http://www-01.ibm.com/support/docview.wss?uid=swg21687263", "http://www-01.ibm.com/support/docview.wss?uid=swg21687928"], "occurrence_count": 7, "reachable_flows": 0}
{"id": "GHSA-j4mr-9xw3-c9jx", "package": "npm:base64-url", "purl": "pkg:npm/base64-url@1.2.1", "package_type": "npm", "package_usage": "required", "version": "1.2.1", "fix_version": "2.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Out-of-bounds Read in base64-url\nVersions of `base64-url` before 2.0.0 are vulnerable to out-of-bounds read as it allocates uninitialized Buffers when number is passed in input.\n\n\n## Recommendation\n\nUpdate to version 2.0.0 or later.", "related_urls": ["https://hackerone.com/reports/321692", "https://www.npmjs.com/advisories/660"], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2022-3517", "package": "npm:minimatch", "purl": "pkg:npm/minimatch@0.3.0", "package_type": "npm", "package_usage": "required", "version": "0.3.0", "fix_version": "3.0.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# minimatch ReDoS vulnerability\nA vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2022-3517", "https://github.com/grafana/grafana-image-renderer/issues/329", "https://github.com/nodejs/node/issues/42510", "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6", "https://github.com/isaacs/minimatch", "https://lists.debian.org/debian-lts-announce/2023/01/msg00011.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK"], "occurrence_count": 14, "reachable_flows": 0}
{"id": "CVE-2021-23337", "package": "npm:lodash", "purl": "pkg:npm/lodash@2.4.2", "package_type": "npm", "package_usage": "required", "version": "2.4.2", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.2", "short_description": "# Command Injection in lodash\n`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-23337", "https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c", "https://www.oracle.com/security-alerts/cpuoct2021.html", "https://www.oracle.com/security-alerts/cpujul2022.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://snyk.io/vuln/SNYK-JS-LODASH-1040724", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930", "https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932", "https://security.netapp.com/advisory/ntap-20210312-0006", "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851", "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851", "https://github.com/lodash/lodash", "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf"], "occurrence_count": 250, "reachable_flows": 0}
{"id": "GHSA-g74r-ffvr-5q9f", "package": "npm:concat-stream", "purl": "pkg:npm/concat-stream@1.6.2", "package_type": "npm", "package_usage": "required", "version": "1.6.2", "fix_version": "1.4.11", "severity": "MEDIUM", "cvss_score": "5.6", "short_description": "# Memory Exposure in concat-stream\nVersions of `concat-stream` before 1.5.2 are vulnerable to memory exposure if userp provided input is passed into `write()`\n\nVersions <1.3.0 are not affected due to not using unguarded Buffer constructor.\n\n\n\n## Recommendation\n\nUpdate to version 1.5.2, 1.4.11, 1.3.2 or later.\n\nIf you are unable to update make sure user provided input into the `write()` function is not a number.", "related_urls": ["https://github.com/maxogden/concat-stream/pull/47", "https://github.com/maxogden/concat-stream/pull/47/commits/3e285ba5e5b10b7c98552217f5c1023829efe69e", "https://gist.github.com/ChALkeR/c2d2fd3f1d72d51ad883df195be03a85", "https://www.npmjs.com/advisories/597"], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2018-16487", "package": "npm:lodash", "purl": "pkg:npm/lodash@2.4.2", "package_type": "npm", "package_usage": "required", "version": "2.4.2", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution in lodash\nVersions of `lodash` before 4.17.11 are vulnerable to prototype pollution. \n\nThe vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.11 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2018-16487", "https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad", "https://hackerone.com/reports/380873", "https://github.com/advisories/GHSA-4xc9-xhrj-v574", "https://security.netapp.com/advisory/ntap-20190919-0004", "https://www.npmjs.com/advisories/782"], "occurrence_count": 250, "reachable_flows": 0}
{"id": "CVE-2014-10064", "package": "npm:qs", "purl": "pkg:npm/qs@1.0.2", "package_type": "npm", "package_usage": "required", "version": "1.0.2", "fix_version": "1.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial-of-Service Extended Event Loop Blocking in qs\nVersions prior to 1.0.0 of `qs` are affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string.\n\n\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2014-10064", "https://github.com/advisories/GHSA-f9cm-p3w6-xvr3", "https://www.npmjs.com/advisories/28"], "occurrence_count": 7, "reachable_flows": 0}
{"id": "GHSA-5v72-xg48-5rpm", "package": "npm:ws", "purl": "pkg:npm/ws@1.1.0", "package_type": "npm", "package_usage": "required", "version": "1.1.0", "fix_version": "1.1.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial of Service in ws\nAffected versions of `ws` can crash when a specially crafted `Sec-WebSocket-Extensions` header containing `Object.prototype` property names as extension or parameter names is sent.\n\n## Proof of concept\n\n```\nconst WebSocket = require('ws');\nconst net = require('net');\n\nconst wss = new WebSocket.Server({ port: 3000 }, function () {\n\tconst payload = 'constructor';\t// or ',;constructor'\n\n\tconst request = [\n\t\t'GET / HTTP/1.1',\n\t\t'Connection: Upgrade',\n\t\t'Sec-WebSocket-Key: test',\n\t\t'Sec-WebSocket-Version: 8',\n\t\t`Sec-WebSocket-Extensions: ${payload}`,\n\t\t'Upgrade: websocket',\n\t\t'\r\n'\n\t].join('\r\n');\n\n\tconst socket = net.connect(3000, function () {\n\t\tsocket.resume();\n\t\tsocket.write(request);\n\t});\n});\n```\n\n\n## Recommendation\n\nUpdate to version 3.3.1 or later.", "related_urls": ["https://github.com/websockets/ws/commit/c4fe46608acd61fbf7397eadc47378903f95b78a", "https://github.com/websockets/ws/commit/f8fdcd40ac8be7318a6ee41f5ceb7e77c995b407", "https://snyk.io/vuln/npm:ws:20171108", "https://www.npmjs.com/advisories/550", "https://www.npmjs.com/advisories/550/versions"], "occurrence_count": 2, "reachable_flows": 0}
{"id": "GHSA-2pr6-76vf-7546", "package": "npm:js-yaml", "purl": "pkg:npm/js-yaml@2.0.5", "package_type": "npm", "package_usage": "required", "version": "2.0.5", "fix_version": "3.13.1", "severity": "MEDIUM", "cvss_score": "5.9", "short_description": "# Denial of Service in js-yaml\nVersions of `js-yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully-crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 3.13.0.", "related_urls": ["https://github.com/nodeca/js-yaml/issues/475", "https://github.com/nodeca/js-yaml/commit/a567ef3c6e61eb319f0bfc2671d91061afb01235", "https://snyk.io/vuln/SNYK-JS-JSYAML-173999", "https://www.npmjs.com/advisories/788", "https://www.npmjs.com/advisories/788/versions"], "occurrence_count": 1, "reachable_flows": 0}
{"id": "CVE-2017-20165", "package": "npm:debug", "purl": "pkg:npm/debug@0.7.4", "package_type": "npm", "package_usage": "required", "version": "0.7.4", "fix_version": "2.6.9", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# debug Inefficient Regular Expression Complexity vulnerability\nA vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2017-20165", "https://github.com/debug-js/debug/pull/504", "https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685", "https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a", "https://github.com/debug-js/debug", "https://github.com/debug-js/debug/releases/tag/2.6.9", "https://github.com/debug-js/debug/releases/tag/3.1.0", "https://vuldb.com/?ctiid.217665", "https://vuldb.com/?id.217665"], "occurrence_count": 46, "reachable_flows": 0}
{"id": "CVE-2020-8203", "package": "npm:lodash", "purl": "pkg:npm/lodash@2.4.2", "package_type": "npm", "package_usage": "required", "version": "2.4.2", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.4", "short_description": "# Prototype Pollution in lodash\nVersions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The functions `pick`, `set`, `setWith`, `update`, `updateWith`, and `zipObjectDeep` allow a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires manipulating objects based on user-provided property values or arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2020-8203", "https://github.com/lodash/lodash/issues/4744", "https://github.com/lodash/lodash/issues/4874", "https://github.com/github/advisory-database/pull/2884", "https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12", "https://hackerone.com/reports/712065", "https://hackerone.com/reports/864701", "https://github.com/lodash/lodash", "https://github.com/lodash/lodash/wiki/Changelog#v41719", "https://security.netapp.com/advisory/ntap-20200724-0006", "https://web.archive.org/web/20210914001339/https://github.com/lodash/lodash/issues/4744"], "occurrence_count": 250, "reachable_flows": 0}
{"id": "CVE-2016-10540", "package": "npm:minimatch", "purl": "pkg:npm/minimatch@0.3.0", "package_type": "npm", "package_usage": "required", "version": "0.3.0", "fix_version": "3.0.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in minimatch\nAffected versions of `minimatch` are vulnerable to regular expression denial of service attacks when user input is passed into the `pattern` argument of `minimatch(path, pattern)`.\n\n\n## Proof of Concept\n```js\nvar minimatch = require(\u201cminimatch\u201d);\n\n// utility function for generating long strings\nvar genstr = function (len, chr) {\n\tvar result = \u201c\u201d;\n\tfor (i=0; i<=len; i++) {\n\t\tresult = result + chr;\n\t}\n\treturn result;\n}\n\nvar exploit = \u201c[!\u201d + genstr(1000000, \u201c\\\u201d) + \u201cA\u201d;\n\n// minimatch exploit.\nconsole.log(\u201cstarting minimatch\u201d);\nminimatch(\u201cfoo\u201d, exploit);\nconsole.log(\u201cfinishing minimatch\u201d);\n```\n\n\n## Recommendation\n\nUpdate to version 3.0.2 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2016-10540", "https://github.com/advisories/GHSA-hxm2-r34f-qmc5", "https://www.npmjs.com/advisories/118"], "occurrence_count": 14, "reachable_flows": 0}
{"id": "GHSA-xc7v-wxcw-j472", "package": "npm:tunnel-agent", "purl": "pkg:npm/tunnel-agent@0.4.3", "package_type": "npm", "package_usage": "optional", "version": "0.4.3", "fix_version": "0.6.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Memory Exposure in tunnel-agent\nVersions of `tunnel-agent` before 0.6.0 are vulnerable to memory exposure.\n\nThis is exploitable if user supplied input is provided to the auth value and is a number.\n\nProof-of-concept:\n```js\nrequire('request')({\n\tmethod: 'GET',\n\turi: 'http://www.example.com',\n\ttunnel: true,\n\tproxy:{\n\t\tprotocol: 'http:',\n\t\thost:'127.0.0.1',\n\t\tport:8080,\n\t\tauth:USERSUPPLIEDINPUT // number\n\t}\n});\n```\n\n\n## Recommendation\n\nUpdate to version 0.6.0 or later.", "related_urls": ["https://github.com/request/tunnel-agent/commit/9ca95ec7219daface8a6fc2674000653de0922c0", "https://gist.github.com/ChALkeR/fd6b2c445834244e7d440a043f9d2ff4", "https://www.npmjs.com/advisories/598"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-8j8c-7jfh-h6hx", "package": "npm:js-yaml", "purl": "pkg:npm/js-yaml@2.0.5", "package_type": "npm", "package_usage": "required", "version": "2.0.5", "fix_version": "3.13.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Code Injection in js-yaml\nVersions of `js-yaml` prior to 3.13.1 are vulnerable to Code Injection. The `load()` function may execute arbitrary code injected through a malicious YAML file. Objects that have `toString` as key, JavaScript code as value and are used as explicit mapping keys allow attackers to execute the supplied code through the `load()` function. The `safeLoad()` function is unaffected.\n\nAn example payload is \n`{ toString: !<tag:yaml.org,2002:js/function> 'function (){return Date.now()}' } : 1` \nwhich returns the object \n{\n\t\"1553107949161\": 1\n}\n\n\n## Recommendation\n\nUpgrade to version 3.13.1.", "related_urls": ["https://github.com/nodeca/js-yaml/pull/480", "https://github.com/nodeca/js-yaml/pull/480/commits/e18afbf1edcafb7add2c4c7b22abc8d6ebc2fa61", "https://www.npmjs.com/advisories/813"], "occurrence_count": 1, "reachable_flows": 0}
